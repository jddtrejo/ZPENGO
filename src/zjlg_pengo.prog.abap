*&---------------------------------------------------------------------*
*& Report  ZJLG_PENGO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT ZJLG_PENGO.

DATA: WS_PROXY             TYPE REF TO ZPGOCO_PENGO_SOAP,
      WA_SOPAIN_MATATTRIB  TYPE ZPGOGET_PRODUCTATTRIBUTE_SOAP1,
      WA_SOPAOUT_MATATTRIB TYPE ZPGOGET_PRODUCTATTRIBUTE_SOAP,
      WA_SOPAIN_MATERIAL   TYPE ZPGOCREATE_MATERIAL_SOAP_IN,
      WA_SOPAOUT_MATERIAL  TYPE ZPGOCREATE_MATERIAL_SOAP_OUT,
      WA_SOPAIN_STOCK      TYPE ZPGOUPDATE_MATERIALSTOCK_SOAP1,
      WA_SOPAOUT_STOCK     TYPE ZPGOUPDATE_MATERIALSTOCK_SOAP,
      WA_SOPAIN_CUSTOMER   TYPE ZPGODISPLAY_CUSTOMER_SOAP_IN,
      WA_SOPAOUT_CUSTOMER  TYPE ZPGODISPLAY_CUSTOMER_SOAP_OUT,
      WA_SOPAIN_PURCHASEO  TYPE ZPGODISPLAY_PURCHARSEORDER_SO1,
      WA_SOPAOUT_PURCHASEO TYPE ZPGODISPLAY_PURCHARSEORDER_SOA,
      WA_SOPAIN_LOGIN      TYPE ZPGOLOGIN_SOAP_IN,
      WA_SOPAOUT_LOGIN     TYPE ZPGOLOGIN_SOAP_OUT,
      WA_SOPAIN_UPDCUST    TYPE ZPGOUPDATE_CUSTOMER_SOAP_IN,
      WA_SOPAOUT_UPDCUST   TYPE ZPGOUPDATE_CUSTOMER_SOAP_OUT.




DATA: VL_SYS_EXCEPTION  TYPE REF TO CX_AI_SYSTEM_FAULT,
      VL_SYS_EXCEPTION2 TYPE REF TO CX_AI_APPLICATION_FAULT,
      VL_SYS_FAULT      TYPE REF TO CX_AI_SYSTEM_FAULT,
      VL_SYS_FAULT2     TYPE REF TO CX_AI_APPLICATION_FAULT,
      VL_ROOT           TYPE REF TO CX_ROOT,
      VL_ERROR          TYPE STRING.

DATA: VL_LOGICALPORT TYPE PRX_LOGICAL_PORT_NAME.



*----------------------------------------------------------------------*
* Parametros
*----------------------------------------------------------------------*

*Seleccion de opciÃ³n de Parametros
SELECTION-SCREEN BEGIN OF BLOCK PARAM WITH FRAME TITLE TEXT-001.
PARAMETERS: P_MATER AS CHECKBOX,
            P_STOCK AS CHECKBOX,
            P_CUSTO AS CHECKBOX,
            P_PURCH AS CHECKBOX,
            P_UPDCO AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK PARAM.




START-OF-SELECTION.
  PERFORM PROCESS.









*&---------------------------------------------------------------------*
*&      Form  PROCESS
*&---------------------------------------------------------------------*
FORM PROCESS .


  PERFORM CREATE_LOGICALPORT.

*  TRY .
*      CREATE OBJECT WS_PROXY.
*
*    CATCH CX_AI_SYSTEM_FAULT.
*      VL_ERROR = VL_SYS_FAULT->GET_TEXT( ).
*    CATCH CX_AI_APPLICATION_FAULT.
*      VL_ERROR = VL_SYS_FAULT2->GET_TEXT( ).
*  ENDTRY.
*
*  IF VL_ERROR IS NOT INITIAL.
*    MESSAGE VL_ERROR TYPE 'S' DISPLAY LIKE 'E'.
*    STOP.
*  ENDIF.

  DATA: VL_SESSION   TYPE STRING,
        VL_ATTRIBUTE TYPE STRING.


  VL_SESSION = '7859bfab208848029b53f1cce2f7490a'.

  IF VL_SESSION IS INITIAL.
    PERFORM CREATE_SESSION CHANGING VL_SESSION.
  ENDIF.
  PERFORM CREATE_MATERIAL USING VL_ATTRIBUTE VL_SESSION.
  PERFORM SEARCH_CUSTOMER USING VL_SESSION.
  PERFORM SEARCH_PURCHARSE_ORDER USING VL_SESSION.
  PERFORM UPDATE_MATERIALSTOCK USING VL_SESSION.
  PERFORM UPDATE_CUSTOMER USING VL_SESSION.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_ATTRIBUTE
*&---------------------------------------------------------------------*
FORM GET_ATTRIBUTE  USING P_SESSION CHANGING P_ATTRIBUTE.


  TRY .
      WA_SOPAIN_MATATTRIB-SESSION = P_SESSION.

      CALL METHOD WS_PROXY->GET_PRODUCTATTRIBUTE
        EXPORTING
          INPUT  = WA_SOPAIN_MATATTRIB
        IMPORTING
          OUTPUT = WA_SOPAOUT_MATATTRIB.

    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  IF VL_ERROR IS NOT INITIAL.
    WRITE: VL_ERROR.
    STOP.
  ENDIF.

  DATA: WA_ATTR TYPE ZPGOCATALOG_PRODUCT_ATTRIBUTE.

  READ TABLE WA_SOPAOUT_MATATTRIB-GET_PRODUCTATTRIBUTE_RESULT-CATALOG_PRODUCT_ATTRIBUTE_SET
        INTO WA_ATTR INDEX 1.

  P_ATTRIBUTE = WA_ATTR-SET_ID.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CREATE_MATERIAL
*&---------------------------------------------------------------------*
FORM CREATE_MATERIAL USING P_ATTRIBUTE P_SESSION.
  CHECK P_MATER EQ 'X'.

  P_ATTRIBUTE = '4'.
  IF P_ATTRIBUTE IS INITIAL.
    PERFORM GET_ATTRIBUTE USING P_SESSION CHANGING P_ATTRIBUTE.
  ENDIF.

  DATA: DATA TYPE ZPGOMATERIAL_CREATEENTITYS.
  DATA: MAT_ARR TYPE ZPGOARRAY_OF_MATERIAL_CREATEEN.
  DATA: CREATEENTITY_TAB TYPE ZPGOMATERIAL_CREATEENTITY_TAB.
  DATA: CREATEENTITY_WA TYPE ZPGOMATERIAL_CREATEENTITY.
  DATA: MATDATA TYPE ZPGOCATALOG_PRODUCT_CREATE_ENT.

  DATA: "WA_PROENT     TYPE ZPGOCATALOG_PRODUCT_CREATE_ENT, "ZPGOPRODUCTS_ENTITY,
    WA_WEBSITES TYPE ZPGOARRAY_OF_STRING,
    IT_WEBSTR   TYPE ZPGOSTRING_TAB,
    WA_WEBSTR   LIKE LINE OF IT_WEBSTR.

  WA_WEBSTR = 'woolworth'.
  APPEND WA_WEBSTR TO IT_WEBSTR.
  WA_WEBSTR = 'delsol'.
  APPEND WA_WEBSTR TO IT_WEBSTR.
  WA_WEBSITES-STRING = IT_WEBSTR.

  MATDATA-NAME = 'A MI CHECO'.
  MATDATA-WEBSITES = WA_WEBSITES.

  MATDATA-DESCRIPTION = 'Product description'.
  MATDATA-SHORT_DESCRIPTION = 'Product short description'.
  MATDATA-WEIGHT = '10'.
  MATDATA-STATUS = '1'.
*  MATDATA-URL_KEY = 'product-url-key2'.
*  MATDATA-URL_PATH = 'product-url-path2'.
  MATDATA-VISIBILITY = '4'.
  MATDATA-PRICE = '100'.
  MATDATA-TAX_CLASS_ID = '1'.
  MATDATA-META_TITLE = 'Product meta title'.
  MATDATA-META_KEYWORD = 'Product meta keyword'.
  MATDATA-META_DESCRIPTION = 'Product meta description'.
  MATDATA-SAP_MATERIAL = '1000215002'.

  CREATEENTITY_WA-TYPE = 'C'.
  CREATEENTITY_WA-SKU = '2100'.
  CREATEENTITY_WA-ATTS = P_ATTRIBUTE.
  CREATEENTITY_WA-MAT_DATA = MATDATA.
  APPEND CREATEENTITY_WA TO CREATEENTITY_TAB.



*  createentity_wa-type = 'U'.
*  createentity_wa-sku = '200'.
*  createentity_wa-atts = p_attribute.
*  createentity_wa-mat_data = matdata.
*  APPEND createentity_wa TO createentity_tab.

  MAT_ARR-MATERIAL_CREATEENTITY = CREATEENTITY_TAB.
  DATA-MAT_ARR = MAT_ARR.

  WA_SOPAIN_MATERIAL-STORES = ''.
  WA_SOPAIN_MATERIAL-SESSION = P_SESSION.
  WA_SOPAIN_MATERIAL-DATA = DATA.

  TRY .
      CALL METHOD WS_PROXY->CREATE_MATERIAL
        EXPORTING
          INPUT  = WA_SOPAIN_MATERIAL
        IMPORTING
          OUTPUT = WA_SOPAOUT_MATERIAL.
    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  CREATEENTITY_TAB = WA_SOPAOUT_MATERIAL-CREATE_MATERIAL_RESULT-MAT_ARR-MATERIAL_CREATEENTITY.

  LOOP AT CREATEENTITY_TAB INTO CREATEENTITY_WA.
    WRITE:/ CREATEENTITY_WA-SKU,CREATEENTITY_WA-RESULT.
  ENDLOOP.

ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  UPDATE_MATERIALSTOCK
*&---------------------------------------------------------------------*
FORM UPDATE_MATERIALSTOCK USING P_SESSION.
  CHECK P_STOCK EQ 'X'.

  DATA: DATA TYPE ZPGOSTOCK_UPDATE_ENTITYS.
  DATA: STOCK_ARR TYPE ZPGOARRAY_OF_STOCK_UPDATE_ENTI.
  DATA: UPDATEENTITY_TAB TYPE ZPGOSTOCK_UPDATE_ENTITY_TAB.
  DATA: UPDATEENTITY_WA TYPE ZPGOSTOCK_UPDATE_ENTITY.
  DATA: STOCKDATA TYPE ZPGOCATALOG_INVENTORY_STOCK_IT.

  STOCKDATA-QTY = '2'.
  UPDATEENTITY_WA-SKU = '200'.
  UPDATEENTITY_WA-DATA = STOCKDATA.
  APPEND UPDATEENTITY_WA TO UPDATEENTITY_TAB.

  STOCKDATA-QTY = '3'.
  UPDATEENTITY_WA-SKU = '500'.
  UPDATEENTITY_WA-DATA = STOCKDATA.
  APPEND UPDATEENTITY_WA TO UPDATEENTITY_TAB.

  STOCK_ARR-STOCK_UPDATE_ENTITY = UPDATEENTITY_TAB.
  DATA-STOCK_ARR = STOCK_ARR.

  WA_SOPAIN_STOCK-SESSION = P_SESSION.
  WA_SOPAIN_STOCK-DATA = DATA.

  TRY .
      CALL METHOD WS_PROXY->UPDATE_MATERIALSTOCK
        EXPORTING
          INPUT  = WA_SOPAIN_STOCK
        IMPORTING
          OUTPUT = WA_SOPAOUT_STOCK.
    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  UPDATEENTITY_TAB = WA_SOPAOUT_STOCK-UPDATE_MATERIALSTOCK_RESULT-STOCK_ARR-STOCK_UPDATE_ENTITY.

  LOOP AT UPDATEENTITY_TAB INTO UPDATEENTITY_WA.
    WRITE:/ UPDATEENTITY_WA-SKU,UPDATEENTITY_WA-RESULT.
  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SEARCH_CUSTOMER
*&---------------------------------------------------------------------*
FORM SEARCH_CUSTOMER USING P_SESSION.
  CHECK P_CUSTO EQ 'X'.

  DATA: IT_CUSTOMERS TYPE ZPGOCUSTOMER_ENTITY_TAB, "ZPGOCUSTOMER_CUSTOMER_ENTI_TAB,
        WA_CUSTOMERS TYPE ZPGOCUSTOMER_ENTITY.

  WA_SOPAIN_CUSTOMER-BEGDA = '20150101'.
  WA_SOPAIN_CUSTOMER-BEGTI = SY-UZEIT.
  WA_SOPAIN_CUSTOMER-ENDDA = '20160101'.
  WA_SOPAIN_CUSTOMER-ENDTI = SY-UZEIT.
  WA_SOPAIN_CUSTOMER-ADDRESS = 'X'.
  WA_SOPAIN_CUSTOMER-SESSION = P_SESSION.

  TRY .
      CALL METHOD WS_PROXY->DISPLAY_CUSTOMER
        EXPORTING
          INPUT  = WA_SOPAIN_CUSTOMER
        IMPORTING
          OUTPUT = WA_SOPAOUT_CUSTOMER.
    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  IT_CUSTOMERS = WA_SOPAOUT_CUSTOMER-DISPLAY_CUSTOMER_RESULT-CUSTOMER_ENTITY. "CUSTOMER_CUSTOMER_ENTITY[].

  DATA: IT_ADDRESS TYPE ZPGOCUSTOMER_ADDRESS_ENTIT_TAB,
        WA_ADDRESS TYPE ZPGOCUSTOMER_ADDRESS_ENTITY_IT.

  LOOP AT IT_CUSTOMERS INTO WA_CUSTOMERS.
    WRITE:/ WA_CUSTOMERS-GENERAL-CREATED_AT,
            WA_CUSTOMERS-GENERAL-EMAIL,
            WA_CUSTOMERS-GENERAL-FIRSTNAME,
            WA_CUSTOMERS-GENERAL-LASTNAME.

    IF WA_SOPAIN_CUSTOMER-ADDRESS EQ 'X'.
      IT_ADDRESS = WA_CUSTOMERS-ADDRESS-CUSTOMER_ADDRESS_ENTITY_ITEM.

      LOOP AT IT_ADDRESS INTO WA_ADDRESS.
        WRITE:/ WA_ADDRESS-CITY,
                WA_ADDRESS-POSTCODE,
                WA_ADDRESS-REGION,
                WA_ADDRESS-STREET.
      ENDLOOP.
    ENDIF.

  ENDLOOP.

  WRITE VL_ERROR.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  SEARCH_PURCHARSE_ORDER
*&---------------------------------------------------------------------*
FORM SEARCH_PURCHARSE_ORDER USING P_SESSION.
  CHECK P_PURCH EQ 'X'.

  DATA: IT_PURCHASEO TYPE ZPGOSALES_ORDER_ENTITY_TAB,
        WA_PURCHASEO TYPE ZPGOSALES_ORDER_ENTITY.

  WA_SOPAIN_PURCHASEO-BEGDA = '20150101'.
  WA_SOPAIN_PURCHASEO-BEGTI = SY-UZEIT.
  WA_SOPAIN_PURCHASEO-ENDDA = '20160101'.
  WA_SOPAIN_PURCHASEO-ENDTI = SY-UZEIT.
  WA_SOPAIN_PURCHASEO-SESSION = P_SESSION.


  TRY .
      CALL METHOD WS_PROXY->DISPLAY_PURCHARSEORDER
        EXPORTING
          INPUT  = WA_SOPAIN_PURCHASEO
        IMPORTING
          OUTPUT = WA_SOPAOUT_PURCHASEO.
    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  IT_PURCHASEO = WA_SOPAOUT_PURCHASEO-DISPLAY_PURCHARSEORDER_RESULT-SALES_ORDER_ENTITY[].

  LOOP AT IT_PURCHASEO INTO WA_PURCHASEO.
    WRITE:/ WA_PURCHASEO-CREATED_AT,WA_PURCHASEO-SUBTOTAL,WA_PURCHASEO-GRAND_TOTAL,WA_PURCHASEO-STATUS.
  ENDLOOP.

  WRITE: VL_ERROR.


ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CREATE_SESSION
*&---------------------------------------------------------------------*
FORM CREATE_SESSION  CHANGING P_SESSION.

  TRY .

      CALL METHOD WS_PROXY->LOGIN
        EXPORTING
          INPUT  = WA_SOPAIN_LOGIN
        IMPORTING
          OUTPUT = WA_SOPAOUT_LOGIN.

    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

  IF VL_ERROR IS NOT INITIAL.
    WRITE: VL_ERROR.
    STOP.
  ENDIF.

  P_SESSION = WA_SOPAOUT_LOGIN-LOGIN_RESULT.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  CREATE_LOGICALPORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_LOGICALPORT .

  TRY.
      PERFORM GET_LOGICALPORT USING 'ZPGOCO_PENGO_SOAP'.

      CREATE OBJECT WS_PROXY
        EXPORTING
          LOGICAL_PORT_NAME = VL_LOGICALPORT.

    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_FAULT.
      VL_ERROR = VL_SYS_FAULT->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_FAULT2.
      VL_ERROR = VL_SYS_FAULT2->GET_TEXT( ).
  ENDTRY.

  IF VL_ERROR IS NOT INITIAL.
    MESSAGE VL_ERROR TYPE 'S' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_LOGICALPORT
*&---------------------------------------------------------------------*
FORM GET_LOGICALPORT  USING  P_PRKEY.

  DATA: VL_ERROR TYPE STRING.

  CALL FUNCTION 'ZCCHRMF040_GETPROXY'
    EXPORTING
      PRKEY      = P_PRKEY
    IMPORTING
      PROXY      = VL_LOGICALPORT
    EXCEPTIONS
      NO_PROXIES = 1
      OTHERS     = 2.
  IF SY-SUBRC <> 0.
    CONCATENATE 'No se Encuentra el Puerto Logico' P_PRKEY 'en la Tabla ZPROXIES' INTO VL_ERROR SEPARATED BY SPACE.
    MESSAGE VL_ERROR TYPE 'S' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  UPDATE_CUSTOMER
*&---------------------------------------------------------------------*
FORM UPDATE_CUSTOMER  USING    P_SESSION.
  CHECK P_UPDCO EQ 'X'.

  TRY .
      WA_SOPAIN_UPDCUST-SESSION = P_SESSION.
      WA_SOPAIN_UPDCUST-CUSTOMER_ID = '1'.
      WA_SOPAIN_UPDCUST-CUSTOMER_SAP = '2123'.

      CALL METHOD WS_PROXY->UPDATE_CUSTOMER
        EXPORTING
          INPUT  = WA_SOPAIN_UPDCUST
        IMPORTING
          OUTPUT = WA_SOPAOUT_UPDCUST.
    CATCH CX_AI_SYSTEM_FAULT INTO VL_SYS_EXCEPTION.
      VL_ERROR = VL_SYS_EXCEPTION->GET_TEXT( ).
    CATCH CX_AI_APPLICATION_FAULT INTO VL_SYS_EXCEPTION2.
      VL_ERROR = VL_SYS_EXCEPTION2->GET_TEXT( ).
    CATCH CX_ROOT INTO VL_ROOT.
      VL_ERROR = VL_ROOT->GET_TEXT( ).
  ENDTRY.

ENDFORM.
